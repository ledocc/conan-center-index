diff --color -Naur a/CMakeLists.txt b/CMakeLists.txt
--- a/CMakeLists.txt	2024-01-19 13:02:20.000000000 +0100
+++ b/CMakeLists.txt	2024-01-29 11:51:53.504362247 +0100
@@ -64,24 +64,8 @@
   option(USE_OPENCL "Use OpenCL" ON)
 endif()
 if (USE_OPENCL)
-    find_package(OpenCL)
-    if(${OpenCL_FOUND})
-        set(HAVE_OPENCL TRUE)
-        # Fixup for standard FindOpenCL module not assigning proper framework headers directory
-        if (APPLE AND "${OpenCL_INCLUDE_DIR}" MATCHES "OpenCL\\.framework/?$")
-            set(OpenCL_INCLUDE_DIR "${OpenCL_INCLUDE_DIR}/Headers" CACHE PATH "" FORCE)
-            set(OpenCL_INCLUDE_DIRS ${OpenCL_INCLUDE_DIR})
-        endif()
-        find_package(OpenCLhpp)
-        if(NOT OPENCL_HPP_FOUND)
-            # Use internal headers copied from OpenCL-CLHPP project
-            set(OPENCL_HPP_INCLUDE_DIR ${CMAKE_SOURCE_DIR}/external/opencl-clhpp/include CACHE PATH "" FORCE)
-            message(STATUS "Couldn't find OpenCL C++ headers, using internal: ${OPENCL_HPP_INCLUDE_DIR}")
-        endif()
-        set(OpenCL_INCLUDE_DIRS ${OpenCL_INCLUDE_DIRS} ${OPENCL_HPP_INCLUDE_DIR})
-    else()
-        message(STATUS "Couldn't find OpenCL: support DISABLED")
-    endif()
+    find_package(OpenCL REQUIRED)
+    find_package(OpenCLHeadersCpp REQUIRED)
 endif()
 
 # Configure CCache if available
@@ -362,16 +346,13 @@
   message(STATUS "Found Proj: ${PROJ_VERSION} ${PROJ_DIR}")
   find_package(GEOS REQUIRED)
   message(STATUS "Found Geos: ${GEOS_VERSION} ${GEOS_DIR}")
-  find_package(GDAL REQUIRED)
+  find_package(GDAL REQUIRED COMPONENTS pdal_base pdal_util)
   message(STATUS "Found GDAL: ${GDAL_VERSION} ${GDAL_DIR}")
   find_package(EXPAT REQUIRED)
-  find_package(Spatialindex REQUIRED)
+  find_package(libspatialindex REQUIRED)
   find_package(LibZip REQUIRED)
 
-  find_package(Sqlite3)
-  if (NOT SQLITE3_FOUND)
-    message (SEND_ERROR "sqlite3 dependency was not found!")
-  endif()
+  find_package(Sqlite3 REQUIRED)
 
   find_package(Protobuf CONFIG)
   find_package(Protobuf REQUIRED)
@@ -450,8 +431,7 @@
   endif()
 
   if (WITH_DRACO)
-    find_package(Draco REQUIRED)
-    message(STATUS "Found Draco: ${DRACO_LIBRARY} (${DRACO_VERSION})")
+    find_package(Draco REQUIRED CONFIG)
     set(HAVE_DRACO TRUE)  # used in qgisconfig.h
   endif()
 
@@ -542,7 +522,7 @@
   # Password helper
   find_package(QtKeychain REQUIRED)
   # Master password hash and authentication encryption
-  find_package(QCA REQUIRED)
+  find_package(Qca REQUIRED)
   # Check for runtime dependency of qca-ossl plugin
   # REQUIRED if unit tests are to be run from build directory
   if(NOT MSVC)
diff --color -Naur a/cmake_templates/qgsconfig.h.in b/cmake_templates/qgsconfig.h.in
--- a/cmake_templates/qgsconfig.h.in	2024-01-19 13:02:20.000000000 +0100
+++ b/cmake_templates/qgsconfig.h.in	2024-01-29 11:51:53.504362247 +0100
@@ -51,9 +51,9 @@
 #define PYTHON_VERSION_MINOR "${Python_VERSION_MINOR}"
 #define PYTHON_VERSION_PATCH "${Python_VERSION_PATCH}"
 
-#define PROJ_VERSION_MAJOR ${PROJ_VERSION_MAJOR}
-#define PROJ_VERSION_MINOR ${PROJ_VERSION_MINOR}
-#define PROJ_VERSION_PATCH ${PROJ_VERSION_PATCH}
+#define PROJ_VERSION_MAJOR ${Proj_VERSION_MAJOR}
+#define PROJ_VERSION_MINOR ${Proj_VERSION_MINOR}
+#define PROJ_VERSION_PATCH ${Proj_VERSION_PATCH}
 
 #cmakedefine USING_NMAKE
 
diff --color -Naur a/CMakeUserPresets.json b/CMakeUserPresets.json
--- a/CMakeUserPresets.json	1970-01-01 01:00:00.000000000 +0100
+++ b/CMakeUserPresets.json	2024-01-29 11:51:53.504362247 +0100
@@ -0,0 +1,9 @@
+{
+    "version": 4,
+    "vendor": {
+        "conan": {}
+    },
+    "include": [
+        "/home/callu/work/source/kaud/.cache/.conan/data/qgis/3.34.3/_/_/build/d2a5590711d1bde40120e2b3832f444d372268c1/build/Release/generators/CMakePresets.json"
+    ]
+}
diff --color -Naur a/external/o2/src/CMakeLists.txt b/external/o2/src/CMakeLists.txt
--- a/external/o2/src/CMakeLists.txt	2024-01-19 13:02:20.000000000 +0100
+++ b/external/o2/src/CMakeLists.txt	2024-01-29 11:51:53.504362247 +0100
@@ -161,8 +161,7 @@
     endif()
     if(QTKEYCHAIN_FOUND OR QT5KEYCHAIN_FOUND)
         message("Found QTKeychain")
-        list(APPEND LINK_TARGETS ${QTKEYCHAIN_LIBRARY})
-        include_directories(${QTKEYCHAIN_INCLUDE_DIR})
+        list(APPEND LINK_TARGETS qtkeychain::qtkeychain)
         set( o2_SRCS
                 ${o2_SRCS}
                 o0keychainstore.cpp
diff --color -Naur a/external/qspatialite/CMakeLists.txt b/external/qspatialite/CMakeLists.txt
--- a/external/qspatialite/CMakeLists.txt	2024-01-19 13:02:20.000000000 +0100
+++ b/external/qspatialite/CMakeLists.txt	2024-01-29 11:51:53.504362247 +0100
@@ -5,20 +5,17 @@
 add_definitions(-DQT_PLUGIN)
 add_definitions(-DQT_SHARED)
 
-include_directories(SYSTEM
-	${SQLITE3_INCLUDE_DIR}
-	${Qt5Sql_PRIVATE_INCLUDE_DIRS}
-)
-
 set(QSQLSPATIALITE_SRC qsql_spatialite.cpp smain.cpp)
 QT5_WRAP_CPP(QSQLSPATIALITE_SRC qsql_spatialite.h smain.h)
 
 add_library(qsqlspatialite SHARED ${QSQLSPATIALITE_SRC})
 target_link_libraries(qsqlspatialite
-        ${Qt5Core_LIBRARIES}
-        ${Qt5Sql_LIBRARIES}
+        ${QT_VERSION_BASE}::Core
+        ${QT_VERSION_BASE}::Sql
+        ${QT_VERSION_BASE}::SqlPrivate
+        SQLite::SQLite3
         spatialite::spatialite
-	qgis_core
+ 	qgis_core
 )
 
 install(TARGETS qsqlspatialite
diff --color -Naur a/postinstall/CMakeLists.txt b/postinstall/CMakeLists.txt
--- a/postinstall/CMakeLists.txt	2024-01-19 13:02:20.000000000 +0100
+++ b/postinstall/CMakeLists.txt	2024-01-29 11:51:53.504362247 +0100
@@ -9,4 +9,4 @@
 endif()
 
 configure_file("PostInstall.cmake.in" "PostInstall.cmake" @ONLY)
-install(SCRIPT "${CMAKE_BINARY_DIR}/postinstall/PostInstall.cmake")
+#install(SCRIPT "${CMAKE_BINARY_DIR}/postinstall/PostInstall.cmake")
diff --color -Naur a/src/3d/CMakeLists.txt b/src/3d/CMakeLists.txt
--- a/src/3d/CMakeLists.txt	2024-01-19 13:02:20.000000000 +0100
+++ b/src/3d/CMakeLists.txt	2024-01-29 11:51:53.504362247 +0100
@@ -242,11 +242,9 @@
   ${CMAKE_SOURCE_DIR}/external/tinygltf
 )
 
-if (BUILD_WITH_QT6)
-  target_link_libraries(qgis_3d Qt6::3DCore Qt6::3DRender Qt6::3DInput Qt6::3DLogic Qt6::3DExtras)
-else()
-  target_link_libraries(qgis_3d Qt5::3DCore Qt5::3DRender Qt5::3DInput Qt5::3DLogic Qt5::3DExtras)
-endif()
+
+target_link_libraries(qgis_3d ${QT_VERSION_BASE}::3DCore ${QT_VERSION_BASE}::3DRender ${QT_VERSION_BASE}::3DInput ${QT_VERSION_BASE}::3DLogic ${QT_VERSION_BASE}::3DExtras)
+
 
 GENERATE_EXPORT_HEADER(
    qgis_3d
diff --color -Naur a/src/analysis/CMakeLists.txt b/src/analysis/CMakeLists.txt
--- a/src/analysis/CMakeLists.txt	2024-01-19 13:02:20.000000000 +0100
+++ b/src/analysis/CMakeLists.txt	2024-01-29 11:51:53.508364247 +0100
@@ -496,13 +496,6 @@
   )
 endif()
 
-# install headers
-
-if(HAVE_OPENCL)
-    include_directories(SYSTEM ${OpenCL_INCLUDE_DIRS})
-endif()
-
-
 
 #############################################################
 # qgis_analysis library
diff --color -Naur a/src/app/CMakeLists.txt b/src/app/CMakeLists.txt
--- a/src/app/CMakeLists.txt	2024-01-19 13:02:20.000000000 +0100
+++ b/src/app/CMakeLists.txt	2024-01-29 11:51:53.508364247 +0100
@@ -478,10 +478,6 @@
   PROPERTIES COMPILE_FLAGS -wd4091)
 endif()
 
-if(HAVE_OPENCL)
-    include_directories(SYSTEM ${OpenCL_INCLUDE_DIRS})
-endif()
-
 if(ENABLE_MODELTEST)
   include_directories(../../tests/qt_modeltest)
 endif()
diff --color -Naur a/src/core/CMakeLists.txt b/src/core/CMakeLists.txt
--- a/src/core/CMakeLists.txt	2024-01-19 13:02:20.000000000 +0100
+++ b/src/core/CMakeLists.txt	2024-01-29 14:07:16.630520076 +0100
@@ -1001,7 +1001,7 @@
   set_source_files_properties(qgsspatialindex.cpp PROPERTIES COMPILE_FLAGS -Wno-overloaded-virtual)
 endif()
 
-if (${QT_VERSION_BASE}Positioning_FOUND)
+if (TARGET ${QT_VERSION_BASE}::Positioning)
   set(QGIS_CORE_SRCS ${QGIS_CORE_SRCS}
     gps/qgsqtlocationconnection.cpp
   )
@@ -2046,7 +2046,7 @@
   )
 endif()
 
-if (${QT_VERSION_BASE}Positioning_FOUND)
+if (TARGET ${QT_VERSION_BASE}::Positioning)
   set(QGIS_CORE_HDRS ${QGIS_CORE_HDRS}
     gps/qgsqtlocationconnection.h
   )
@@ -2086,7 +2086,7 @@
 # install qgsconfig.h and plugin.h here so they can get into
 # the OS X framework target
 
-if (${QT_VERSION_BASE}Positioning_FOUND)
+if (TARGET ${QT_VERSION_BASE}::Positioning)
   set(QGIS_CORE_HDRS ${QGIS_CORE_HDRS}
     gps/qgsqtlocationconnection.h
     gps/qgsgpsconnectionregistry.h
@@ -2100,7 +2100,6 @@
     set(QGIS_CORE_HDRS ${QGIS_CORE_HDRS}
         qgsopenclutils.h
     )
-    include_directories(SYSTEM ${OpenCL_INCLUDE_DIRS})
 endif()
 
 if (WITH_EPT)
@@ -2228,30 +2227,10 @@
   target_compile_definitions(qgis_core PUBLIC _HAS_AUTO_PTR_ETC=1)
 endif()
 
-target_include_directories(qgis_core SYSTEM PUBLIC
-  ${${QT_VERSION_BASE}Core_INCLUDE_DIRS}
-  ${${QT_VERSION_BASE}Gui_INCLUDE_DIRS}
-  ${${QT_VERSION_BASE}Xml_INCLUDE_DIRS}
-  ${${QT_VERSION_BASE}Widgets_INCLUDE_DIRS}
-  ${${QT_VERSION_BASE}Svg_INCLUDE_DIRS}
-  ${${QT_VERSION_BASE}PrintSupport_INCLUDE_DIRS}
-  ${${QT_VERSION_BASE}Network_INCLUDE_DIRS}
-  ${${QT_VERSION_BASE}Sql_INCLUDE_DIRS}
-  ${${QT_VERSION_BASE}Concurrent_INCLUDE_DIRS}
-  ${LIBZIP_INCLUDE_DIRS}
-  ${SPATIALINDEX_INCLUDE_DIR} # before GEOS for case-insensitive filesystems
-  ${SQLITE3_INCLUDE_DIR}
-  ${QCA_INCLUDE_DIR}
-  ${QTKEYCHAIN_INCLUDE_DIR}
-  ${${QT_VERSION_BASE}SerialPort_INCLUDE_DIRS}
-  ${Protobuf_INCLUDE_DIRS}
-  ${ZLIB_INCLUDE_DIRS}
-  ${EXIV2_INCLUDE_DIR}
-)
-
 target_include_directories(qgis_core PUBLIC
   ${CMAKE_CURRENT_SOURCE_DIR}
   ${CMAKE_CURRENT_BINARY_DIR}
+  ${CMAKE_CURRENT_BINARY_DIR}/vectortile
   3d
   actions
   annotations
@@ -2341,7 +2320,8 @@
 endif()
 
 if(HAVE_OPENCL)
-  target_link_libraries(qgis_core ${OpenCL_LIBRARY})
+  target_link_libraries(qgis_core OpenCL::OpenCL)
+  target_link_libraries(qgis_core OpenCL::HeadersCpp)
 endif()
 
 
@@ -2402,22 +2382,22 @@
   ${QT_VERSION_BASE}::Sql
   ${QT_VERSION_BASE}::Concurrent
   ${OPTIONAL_QTWEBKIT}
-  ${QCA_LIBRARY}
-  ${QTKEYCHAIN_LIBRARY}
+  Qca::Qca
+  QtKeychain::QtKeychain
   GEOS::geos_c
   GDAL::GDAL
-  ${SPATIALINDEX_LIBRARY}
-  EXPAT::EXPAT
-  ${SQLITE3_LIBRARY}
-  ${LIBZIP_LIBRARY}
-  ${Protobuf_LITE_LIBRARY}
-  ${ZLIB_LIBRARIES}
-  ${EXIV2_LIBRARY}
+  libspatialindex::libspatialindex
+  expat::expat
+  SQLite::SQLite3
+  libzip::zip
+  protobuf::libprotobuf-lite
+  ZLIB::ZLIB
+  exiv2::exiv2
   PROJ::proj
 )
 
 if (WITH_DRACO)
-  target_link_libraries(qgis_core ${DRACO_LIBRARY})
+  target_link_libraries(qgis_core draco::draco)
 endif()
 
 if (NOT IOS)
@@ -2450,6 +2430,11 @@
   )
 endif()
 
+if (WITH_QTSERIALPORT)
+  target_link_libraries(qgis_core ${QT_VERSION_BASE}::SerialPort)
+endif()
+
+
 if (FORCE_STATIC_LIBS)
   target_link_libraries(qgis_core
     provider_wms_a
@@ -2490,13 +2475,13 @@
   set(TARGET_LINK_LIBRARIES qgis_core odbc32 odbccp32)
 endif()
 
-if (${QT_VERSION_BASE}SerialPort_FOUND)
+if (TARGET ${QT_VERSION_BASE}::SerialPort)
   target_link_libraries(qgis_core
     ${QT_VERSION_BASE}::SerialPort
   )
 endif()
 
-if (${QT_VERSION_BASE}Positioning_FOUND)
+if (TARGET ${QT_VERSION_BASE}::Positioning)
   target_link_libraries(qgis_core
     ${QT_VERSION_BASE}::Positioning
   )
diff --color -Naur a/src/gui/CMakeLists.txt b/src/gui/CMakeLists.txt
--- a/src/gui/CMakeLists.txt	2024-01-19 13:02:20.000000000 +0100
+++ b/src/gui/CMakeLists.txt	2024-01-29 11:51:53.512366248 +0100
@@ -1518,17 +1518,12 @@
 
 find_package(${QT_VERSION_BASE} COMPONENTS Multimedia MultimediaWidgets Qml QuickWidgets UiTools REQUIRED)
 
-if(${QT_VERSION_BASE}Qml_FOUND)
+if(TARGET ${QT_VERSION_BASE}::Qml)
   add_definitions(-DWITH_QML)
   set(QGIS_GUI_HDRS
     ${QGIS_GUI_HDRS}
     editorwidgets/qgsqmlwidgetwrapper.h
   )
-endif()
-
-# for installing headers
-
-if(${QT_VERSION_BASE}Qml_FOUND)
   set(QGIS_GUI_SRCS
     ${QGIS_GUI_SRCS}
     editorwidgets/qgsqmlwidgetwrapper.cpp
@@ -1584,21 +1579,6 @@
 # require c++17
 target_compile_features(qgis_gui PRIVATE cxx_std_17)
 
-target_include_directories(qgis_gui SYSTEM PUBLIC
-  ${QWT_INCLUDE_DIR}
-  ${QSCINTILLA_INCLUDE_DIR}
-)
-
-target_include_directories(qgis_gui SYSTEM PRIVATE
-  ${QT_QTUITOOLS_INCLUDE_DIR}
-)
-
-if (BUILD_WITH_QT6)
-  target_include_directories(qgis_gui SYSTEM PRIVATE
-    ${${QT_VERSION_BASE}Svg_INCLUDE_DIRS}
-  )
-endif()
-
 target_include_directories(qgis_gui PUBLIC
   ${CMAKE_SOURCE_DIR}/src/gui
   ${CMAKE_SOURCE_DIR}/src/gui/actions
@@ -1713,8 +1693,8 @@
   qgis_core
   qgis_native
   ${QT_VERSION_BASE}::UiTools
-  ${QWT_LIBRARY}
-  ${QSCINTILLA_LIBRARY}
+  qwt::qwt
+  qscintilla::qscintilla
   ${QT_VERSION_BASE}::QuickWidgets
   ${QT_VERSION_BASE}::Multimedia
   ${QT_VERSION_BASE}::MultimediaWidgets
diff --color -Naur a/src/native/CMakeLists.txt b/src/native/CMakeLists.txt
--- a/src/native/CMakeLists.txt	2024-01-19 13:02:20.000000000 +0100
+++ b/src/native/CMakeLists.txt	2024-01-29 11:51:53.512366248 +0100
@@ -134,12 +134,9 @@
   )
 endif()
 
-if (BUILD_WITH_QT6)
-  target_link_libraries(qgis_native ${Qt6Core_LIBRARIES} ${Qt6Gui_LIBRARIES} "${NATIVE_LINK_LIBS}")
-else()
-  target_link_libraries(qgis_native ${Qt5Core_LIBRARIES} ${Qt5Gui_LIBRARIES} "${NATIVE_LINK_LIBS}")
-endif()
-
+target_link_libraries(qgis_native ${QT_VERSION_BASE}::Core ${QT_VERSION_BASE}::Gui "${NATIVE_LINK_LIBS}")
+  
+  
 if (UNIX AND NOT APPLE AND NOT ANDROID)
   target_link_libraries(qgis_native ${QT_VERSION_BASE}::DBus)
 endif()
diff --color -Naur a/src/process/CMakeLists.txt b/src/process/CMakeLists.txt
--- a/src/process/CMakeLists.txt	2024-01-19 13:02:20.000000000 +0100
+++ b/src/process/CMakeLists.txt	2024-01-29 11:51:53.512366248 +0100
@@ -42,7 +42,7 @@
   qgis_core
   qgis_analysis
   ${QT_VERSION_BASE}::Core
-  ${GEOS_LIBRARY}
+  PROJ::proj
 )
 
 if (WITH_3D)
diff --color -Naur a/src/providers/arcgisrest/CMakeLists.txt b/src/providers/arcgisrest/CMakeLists.txt
--- a/src/providers/arcgisrest/CMakeLists.txt	2024-01-19 13:02:20.000000000 +0100
+++ b/src/providers/arcgisrest/CMakeLists.txt	2024-01-29 11:51:53.512366248 +0100
@@ -33,7 +33,7 @@
 
 target_link_libraries (provider_arcgisfeatureserver_a
   qgis_core
-  ${QCA_LIBRARY}
+  qca::qca
 )
 
 if (WITH_GUI)
@@ -57,7 +57,7 @@
 
   include_directories(SYSTEM
     ${CMAKE_BINARY_DIR}/src/ui
-    ${QSCINTILLA_INCLUDE_DIR}
+###    ${QSCINTILLA_INCLUDE_DIR}
   )
 
   add_dependencies(provider_arcgisfeatureserver_gui_a ui)
@@ -74,7 +74,7 @@
   
   target_link_libraries(provider_arcgisfeatureserver
     qgis_core
-    ${QCA_LIBRARY}
+    qca::qca
   )
   
   # require c++17
@@ -110,7 +110,7 @@
 
 target_link_libraries (provider_arcgismapserver_a
   qgis_core
-  ${QCA_LIBRARY}
+  qca::qca
 )
 
 if (FORCE_STATIC_LIBS)
@@ -124,7 +124,7 @@
   
   target_link_libraries(provider_arcgismapserver
     qgis_core
-    ${QCA_LIBRARY}
+    qca::qca
   )
   
   install (TARGETS provider_arcgismapserver
diff --color -Naur a/src/providers/CMakeLists.txt b/src/providers/CMakeLists.txt
--- a/src/providers/CMakeLists.txt	2024-01-19 13:02:20.000000000 +0100
+++ b/src/providers/CMakeLists.txt	2024-01-29 11:51:53.512366248 +0100
@@ -6,7 +6,7 @@
 add_subdirectory(wms)
 add_subdirectory(wcs)
 add_subdirectory(delimitedtext)
-add_subdirectory(arcgisrest)
+###add_subdirectory(arcgisrest)
 
 if (WITH_SPATIALITE)
   add_subdirectory(spatialite)
@@ -21,7 +21,7 @@
 if (NOT FORCE_STATIC_LIBS)
   add_subdirectory(mssql)
   add_subdirectory(gpx)
-  add_subdirectory(mdal)
+###  add_subdirectory(mdal)
   if (WITH_ANALYSIS)
     add_subdirectory(virtualraster)
   endif()
diff --color -Naur a/src/providers/mdal/CMakeLists.txt b/src/providers/mdal/CMakeLists.txt
--- a/src/providers/mdal/CMakeLists.txt	2024-01-19 13:02:20.000000000 +0100
+++ b/src/providers/mdal/CMakeLists.txt	2024-01-29 11:51:53.512366248 +0100
@@ -203,20 +203,15 @@
 endif()
 
 if (HDF5_FOUND)
-  target_include_directories(provider_mdal PRIVATE ${HDF5_INCLUDE_DIRS})
-  target_link_libraries(provider_mdal ${HDF5_C_LIBRARIES} )
-  target_compile_definitions(provider_mdal PRIVATE ${HDF5_DEFINITIONS})
+  target_link_libraries(provider_mdal PRIVATE hdf5::hdf5 )
 endif()
 
 if (NETCDF_FOUND)
-  target_include_directories(provider_mdal PRIVATE ${NETCDF_INCLUDE_DIR})
-  target_link_libraries(provider_mdal ${NETCDF_LIBRARY} )
+  target_link_libraries(provider_mdal PRIVATE netCDF::netcdf )
 endif()
 
 if (LIBXML2_FOUND)
-  target_include_directories(provider_mdal PRIVATE ${LIBXML2_INCLUDE_DIR})
-  target_link_libraries(provider_mdal ${LIBXML2_LIBRARIES} )
-  target_compile_definitions(provider_mdal PRIVATE ${LIBXML2_DEFINITIONS})
+  target_link_libraries(provider_mdal LibXml2::LibXml2 )
 endif()
 
 # clang-tidy
diff --color -Naur a/src/providers/oracle/CMakeLists.txt b/src/providers/oracle/CMakeLists.txt
--- a/src/providers/oracle/CMakeLists.txt	2024-01-19 13:02:20.000000000 +0100
+++ b/src/providers/oracle/CMakeLists.txt	2024-01-29 11:51:53.512366248 +0100
@@ -35,18 +35,8 @@
 # Build
 
 include_directories(
-
   ${CMAKE_BINARY_DIR}/src/ui
 )
-include_directories(SYSTEM
-  ${QT_QTSQL_INCLUDEDIR}
-)
-
-if (WITH_GUI)
-  include_directories(SYSTEM
-    ${QSCINTILLA_INCLUDE_DIR}
-  )
-endif()
 
 add_library (provider_oracle MODULE ${ORACLE_SRCS} ${ORACLE_HDRS})
 
diff --color -Naur a/src/providers/pdal/CMakeLists.txt b/src/providers/pdal/CMakeLists.txt
--- a/src/providers/pdal/CMakeLists.txt	2024-01-19 13:02:20.000000000 +0100
+++ b/src/providers/pdal/CMakeLists.txt	2024-01-29 11:51:53.516368247 +0100
@@ -154,9 +154,10 @@
 set_target_properties(untwine PROPERTIES
   RUNTIME_OUTPUT_DIRECTORY ${QGIS_OUTPUT_DIRECTORY}/${QGIS_LIBEXEC_SUBDIR}
 )
-
-target_link_libraries (untwine
-  ${PDAL_LIBRARIES}
+find_package(PDAL REQUIRED COMPONENTS pdal_base pdal_util pdal_toto)
+target_link_libraries (untwine PUBLIC
+  pdal_base
+  pdal_util
   Threads::Threads
 )
 target_include_directories(untwine PRIVATE ${UNTWINE_INCLUDE_DIRS})
@@ -197,13 +198,15 @@
 
 target_link_libraries (provider_pdal
   qgis_core
-  ${PDAL_LIBRARIES}
+  pdal_base
+  pdal_util
   Threads::Threads
 )
 
 if (WITH_GUI)
   target_link_libraries (provider_pdal
-    ${PDAL_LIBRARIES}
+    pdal_base
+    pdal_util
     ${QT_VERSION_BASE}::Xml
     ${QT_VERSION_BASE}::Core
     ${QT_VERSION_BASE}::Svg
@@ -222,7 +225,8 @@
 target_compile_features(provider_pdal_a PRIVATE cxx_std_17)
 
 target_link_libraries (provider_pdal_a
-  ${PDAL_LIBRARIES}
+  pdal_base
+  pdal_util
   ${QT_VERSION_BASE}::Xml
   ${QT_VERSION_BASE}::Core
   ${QT_VERSION_BASE}::Svg
@@ -239,7 +243,8 @@
   target_compile_features(provider_pdal_gui_a PRIVATE cxx_std_17)
 
   target_link_libraries (provider_pdal_gui_a
-    ${PDAL_LIBRARIES}
+    pdal_base
+    pdal_util
     ${QT_VERSION_BASE}::Xml
     ${QT_VERSION_BASE}::Core
     ${QT_VERSION_BASE}::Svg
diff --color -Naur a/src/providers/postgres/CMakeLists.txt b/src/providers/postgres/CMakeLists.txt
--- a/src/providers/postgres/CMakeLists.txt	2024-01-19 13:02:20.000000000 +0100
+++ b/src/providers/postgres/CMakeLists.txt	2024-01-29 11:51:53.516368247 +0100
@@ -42,10 +42,6 @@
 # static library
 add_library (provider_postgres_a STATIC ${PG_SRCS} ${PG_HDRS})
 
-target_include_directories(provider_postgres_a SYSTEM PUBLIC
-  ${POSTGRES_INCLUDE_DIR}
-)
-
 target_include_directories(provider_postgres_a PUBLIC
   ${CMAKE_SOURCE_DIR}/src/providers/postgres
 )
@@ -55,7 +51,7 @@
 
 target_link_libraries (provider_postgres_a
   qgis_core
-  ${POSTGRES_LIBRARY}
+  libpq::pq
 )
 
 if (WITH_GUI)
@@ -67,10 +63,6 @@
 
   add_library(provider_postgres_gui_a STATIC ${PG_GUI_SRCS} ${PG_UIS_H})
 
-  target_include_directories(provider_postgres_gui_a SYSTEM PRIVATE
-    ${POSTGRES_INCLUDE_DIR}
-  )
-
   target_include_directories(provider_postgres_gui_a PUBLIC
     ${CMAKE_BINARY_DIR}/src/providers/postgres
   )
@@ -81,7 +73,7 @@
   target_link_libraries(provider_postgres_gui_a
     qgis_gui
     provider_postgres_a
-    ${POSTGRES_LIBRARY}
+    libpq::pq
   )
   add_dependencies(provider_postgres_gui_a ui)
 endif()
@@ -101,9 +93,6 @@
 # static library
 add_library (provider_postgresraster_a STATIC ${PGRASTER_SRCS} ${PG_HDRS})
 
-target_include_directories(provider_postgresraster_a SYSTEM PRIVATE
-  ${POSTGRES_INCLUDE_DIR}
-)
 target_include_directories(provider_postgresraster_a PUBLIC
   ${CMAKE_SOURCE_DIR}/src/providers/postgres/raster
 )
@@ -114,7 +103,7 @@
 target_link_libraries (provider_postgresraster_a
     qgis_core
     provider_postgres_a
-    ${POSTGRES_LIBRARY}
+
 )
 
 if (WITH_GUI)
@@ -138,12 +127,6 @@
   add_library(provider_postgres MODULE ${PG_SRCS} ${PG_GUI_SRCS} ${PG_HDRS})
   add_library(provider_postgresraster MODULE ${PGRASTER_SRCS} ${PG_HDRS})
 
-  target_include_directories(provider_postgres SYSTEM PRIVATE
-    ${POSTGRES_INCLUDE_DIR}
-  )
-  target_include_directories(provider_postgresraster SYSTEM PRIVATE
-    ${POSTGRES_INCLUDE_DIR}
-  )
   target_include_directories(provider_postgresraster PRIVATE
     ${CMAKE_SOURCE_DIR}/src/providers/postgres
   )
@@ -154,12 +137,12 @@
 
   target_link_libraries(provider_postgres
     qgis_core
-    ${POSTGRES_LIBRARY}
+    libpq::pq
   )
 
   target_link_libraries(provider_postgresraster
     qgis_core
-    ${POSTGRES_LIBRARY}
+    libpq::pq
   )
 
   if (WITH_GUI)
diff --color -Naur a/src/providers/spatialite/CMakeLists.txt b/src/providers/spatialite/CMakeLists.txt
--- a/src/providers/spatialite/CMakeLists.txt	2024-01-19 13:02:20.000000000 +0100
+++ b/src/providers/spatialite/CMakeLists.txt	2024-01-29 11:51:53.516368247 +0100
@@ -74,7 +74,7 @@
   add_dependencies(provider_spatialite_gui_a ui)
 
   include_directories(SYSTEM
-    ${QSCINTILLA_INCLUDE_DIR}
+###    ${QSCINTILLA_INCLUDE_DIR}
     ${CMAKE_BINARY_DIR}/src/ui
   )
 endif()
diff --color -Naur a/src/providers/wfs/CMakeLists.txt b/src/providers/wfs/CMakeLists.txt
--- a/src/providers/wfs/CMakeLists.txt	2024-01-19 13:02:20.000000000 +0100
+++ b/src/providers/wfs/CMakeLists.txt	2024-01-29 11:51:53.516368247 +0100
@@ -99,7 +99,7 @@
   add_dependencies(provider_wfs_gui_a ui)
 
   include_directories(SYSTEM
-    ${QSCINTILLA_INCLUDE_DIR}
+###    ${QSCINTILLA_INCLUDE_DIR}
     ${CMAKE_BINARY_DIR}/src/ui
   )
 endif()
diff --color -Naur a/src/server/CMakeLists.txt b/src/server/CMakeLists.txt
--- a/src/server/CMakeLists.txt	2024-01-19 13:02:20.000000000 +0100
+++ b/src/server/CMakeLists.txt	2024-01-29 11:51:53.516368247 +0100
@@ -115,7 +115,7 @@
   qgis_core
   ${FCGI_LIBRARY}
   ${POSTGRES_LIBRARY}
-  ${QCA_LIBRARY}
+  qca::qca
 )
 
 if (WITH_ANALYSIS)
diff --color -Naur a/tests/src/3d/sandbox/CMakeLists.txt b/tests/src/3d/sandbox/CMakeLists.txt
--- a/tests/src/3d/sandbox/CMakeLists.txt	2024-01-19 13:02:20.000000000 +0100
+++ b/tests/src/3d/sandbox/CMakeLists.txt	2024-01-29 11:51:53.516368247 +0100
@@ -16,11 +16,6 @@
   ${QWT_INCLUDE_DIR}
 )
 
-include_directories(SYSTEM
-  ${QT_INCLUDE_DIR}
-  ${QT5_3DEXTRA_INCLUDE_DIR}
-)
-
 add_executable(qgis_3d_sandbox
   qgis_3d_sandbox.cpp
 )
@@ -34,8 +29,8 @@
   ${QT_VERSION_BASE}::Svg
   ${QT_VERSION_BASE}::Network
   ${QT_VERSION_BASE}::Test
-  ${GEOS_LIBRARY}
-  ${QWT_LIBRARY}
+  GEOS::geos
+  qwt::qwt
   qgis_core
   qgis_3d
   qgis_native
diff --color -Naur a/tests/src/analysis/CMakeLists.txt b/tests/src/analysis/CMakeLists.txt
--- a/tests/src/analysis/CMakeLists.txt	2024-01-19 13:02:20.000000000 +0100
+++ b/tests/src/analysis/CMakeLists.txt	2024-01-29 11:51:53.516368247 +0100
@@ -11,10 +11,6 @@
   ${CMAKE_SOURCE_DIR}/src/test
 )
 
-if(HAVE_OPENCL)
-    include_directories(SYSTEM ${OpenCL_INCLUDE_DIRS})
-endif()
-
 #############################################################
 # Tests:
 set(TESTS
diff --color -Naur a/tests/src/core/CMakeLists.txt b/tests/src/core/CMakeLists.txt
--- a/tests/src/core/CMakeLists.txt	2024-01-19 13:02:20.000000000 +0100
+++ b/tests/src/core/CMakeLists.txt	2024-01-29 11:51:53.516368247 +0100
@@ -8,10 +8,6 @@
   ${CMAKE_SOURCE_DIR}/src/test
 )
 
-if(HAVE_OPENCL)
-    include_directories(SYSTEM ${OpenCL_INCLUDE_DIRS})
-endif()
-
 #############################################################
 # Tests:
 
